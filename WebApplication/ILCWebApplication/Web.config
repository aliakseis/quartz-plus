<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <arg key="configType" value="INLINE"/>
      </factoryAdapter>
    </logging>
  </common>
  <log4net>
    <appender name="A1" type="log4net.Appender.RollingFileAppender">
      <file value="App_Data\IlcWebApp.log"/>
      <appendToFile value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="1"/>
      <maximumFileSize value="50MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date{yyyy-MM-dd HH:mm:ss,fff} [%thread] %-5level %logger - %message%newline"/>
      </layout>
    </appender>
    <!-- Set root logger level to DEBUG and its only appender to A1 -->
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="A1"/>
    </root>
  </log4net>
  <connectionStrings>
    <add name="ConnectionString" connectionString="DATA SOURCE=PS;USER ID=SYSTEM;PASSWORD=" providerName="System.Data.OracleClient"/>
    <add name="ADConnectionString" connectionString="LDAP://local/DC=group,DC=local"/>
  </connectionStrings>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.5" />
      </system.Web>
  -->
  <system.web>
    <customErrors defaultRedirect="CustomErrors/DefError.aspx" mode="On">
      <error statusCode="404" redirect="CustomErrors/404Error.aspx"/>
    </customErrors>
    <!--identity impersonate="true" 
        userName="registry:HKLM\SOFTWARE\ILCWebApplication\identity\ASPNET_SETREG,userName"
        password="registry:HKLM\SOFTWARE\ILCWebApplication\identity\ASPNET_SETREG,password"              
        /-->
    <!--
    encrypt:
      aspnet_regiis -pe "system.web/identity" -app "/virtual_dir_name" -prov "DataProtectionConfigurationProvider"
    decrypt:
      aspnet_regiis -pd "system.web/identity" -app "/virtual_dir_name"
      
    alternatively, aspnet_setreg can be used to encrypt credentials  in the identity configuration section:
      aspnet_setreg -k:SOFTWARE\ILCWebApplication\identity -u:"local\pc" -p:"******"
      
    If you have encrypted credentials for the <identity/> configuration section, or a connection
    string for the <sessionState/> configuration section, ensure that the process identity has
    Read access to the registry key. Furthermore, if you have configured IIS to access content on a
    UNC share, the account used to access the share will need Read access to the registry key.
    Regedt32.exe may be used to view/modify registry key permissions.

    You may rename the registry subkey and registry value in order to prevent discovery.      
    -->
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation targetFramework="4.5.2">
      <expressionBuilders>
        <add expressionPrefix="Code" type="ILCWebApplication.CodeExpressionBuilder"/>
      </expressionBuilders>
      <assemblies>
        <add assembly="CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.Shared, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.ReportSource, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.CrystalReports.Engine, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
        <add assembly="CrystalDecisions.ReportAppServer.ClientDoc, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="Forms">
      <forms loginUrl="Login.aspx" name=".ASPXFORMSAUTH"/>
    </authentication>
    <authorization>
      <!--allow roles="CN=PROJECT-MEMBERS;CN=Users;DC=GROUP;DC=local"/>
      <deny users="*" /-->
      <deny users="?"/>
    </authorization>
    <membership defaultProvider="LoginMembershipProvider" userIsOnlineTimeWindow="15">
      <providers>
        <clear/>
        <add name="LoginMembershipProvider" type="ILCWebApplication.Membership.LoginMembershipProvider"/>
        <!--add name="MembershipADProvider" 
             type="System.Web.Security.ActiveDirectoryMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
             connectionStringName="ADConnectionString"
             attributeMapUsername="sAMAccountName"
        /-->
        <!--add name="ADCompositeProvider"
             type="ILCWebApplication.Membership.ADMembershipCompositeProvider"
             connectionStringName="ADConnectionString2, ADConnectionString, ADConnectionString0"
             attributeMapUsername="sAMAccountName"
        /-->
      </providers>
    </membership>
    <!--roleManager
      defaultProvider="ActiveDirectoryRoleProvider"
      enabled="true"
      cacheRolesInCookie="true"
      cookieTimeout="30"
      cookieSlidingExpiration="false"
      >
      
      <providers>
        <add name="ActiveDirectoryRoleProvider"          
          type="ILCWebApplication.ADRoleProvider"
          connectionStringName="ADConnectionString" 
          attributeMapUsername="sAMAccountName"             
        />
      </providers>
    </roleManager-->
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <httpHandlers>
      <add path="StatusHandler.aspx" verb="*" type="ILCWebApplication.StatusHandler" validate="true"/>
      <add path="ServiceControlHandler.aspx" verb="*" type="ILCWebApplication.ServiceControlHandler" validate="true"/>
      <add verb="GET" path="CrystalImageHandler.aspx" type="CrystalDecisions.Web.CrystalImageHandler, CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304"/>
    </httpHandlers>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <location allowOverride="true" inheritInChildApplications="true">
    <appSettings>
      <add key="ILC_ServiceLocation" value="ps"/>
      <add key="ILC_ServiceName" value="IVRSLineChecker"/>
      <add key="CrystalImageCleaner-AutoStart" value="true"/>
      <add key="CrystalImageCleaner-Sleep" value="60000"/>
      <add key="CrystalImageCleaner-Age" value="120000"/>
    </appSettings>
  </location>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
  </system.webServer>
</configuration>